---
export interface Props {
  title: string;
  subtitle: string;
  ctaText: string;
  ctaLink?: string;
  backgroundImage?: string;
  backgroundVideo?: string;
  overlay?: boolean;
  theme?: 'light' | 'dark';
  accentColor?: string;
}

const { 
  title, 
  subtitle, 
  ctaText, 
  ctaLink = '#contact', 
  backgroundImage, 
  backgroundVideo,
  overlay = true,
  theme = 'dark',
  accentColor = 'from-blue-600 to-purple-600'
} = Astro.props;

const textColor = theme === 'dark' ? 'text-white' : 'text-gray-900';
---

<section class="relative min-h-screen flex items-center justify-center overflow-hidden">
  {backgroundVideo ? (
    <video 
      autoplay 
      muted 
      loop 
      playsinline
      class="absolute inset-0 w-full h-full object-cover"
    >
      <source src={backgroundVideo} type="video/mp4" />
    </video>
  ) : backgroundImage ? (
    <div 
      class="absolute inset-0 bg-cover bg-center bg-no-repeat"
      style={`background-image: url(${backgroundImage});`}
    ></div>
  ) : (
    <div class={`absolute inset-0 bg-gradient-to-br ${accentColor}`}></div>
  )}
  
  {overlay && (
    <div class="absolute inset-0 bg-black bg-opacity-50"></div>
  )}
  
  <div class="relative z-10 container mx-auto px-4 lg:px-8 text-center">
    <h1 class={`text-4xl md:text-6xl lg:text-7xl font-bold ${textColor} mb-6 animate-fade-in animate-on-scroll visible`}>
      {title}
    </h1>
    
    <p class={`text-lg md:text-xl lg:text-2xl ${textColor} mb-8 max-w-3xl mx-auto opacity-90 animate-slide-up animate-on-scroll visible`} style="animation-delay: 0.2s;">
      {subtitle}
    </p>
    
    <div class="flex flex-col sm:flex-row gap-4 justify-center animate-slide-up animate-on-scroll visible" style="animation-delay: 0.4s;">
      <a 
        href={ctaLink}
        class={`inline-block bg-gradient-to-r ${accentColor} text-white px-8 py-4 rounded-full font-semibold text-lg transform hover:scale-105 transition-all duration-300 hover:shadow-2xl`}
      >
        {ctaText}
      </a>
      <a 
        href="#services"
        class={`inline-block border-2 ${theme === 'dark' ? 'border-white text-white hover:bg-white hover:text-gray-900' : 'border-gray-900 text-gray-900 hover:bg-gray-900 hover:text-white'} px-8 py-4 rounded-full font-semibold text-lg transition-all duration-300`}
      >
        Más Información
      </a>
    </div>
  </div>
  
  <div class="absolute bottom-8 left-1/2 transform -translate-x-1/2 animate-bounce">
    <svg class={`w-8 h-8 ${textColor}`} fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 14l-7 7m0 0l-7-7m7 7V3"></path>
    </svg>
  </div>
</section>